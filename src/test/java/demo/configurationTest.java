package demo;

import java.awt.Robot;
import java.awt.event.KeyEvent;

import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

import com.aventstack.extentreports.Status;

import GenericUtils.BaseClass;
import GenericUtils.ListnerImplementationClass;
import pomPages.configuration;
@Listeners(ListnerImplementationClass.class)
public class configurationTest extends BaseClass {
	
	@Test
	public void configurationTest() throws Throwable {
		ListnerImplementationClass.test.log(Status.INFO, "CONFIGURATION PAGE");
		ListnerImplementationClass.test.assignAuthor("Saikat");
		ListnerImplementationClass.test.assignDevice("windows 64");
		configuration co=new configuration(driver);
		Robot rt=new Robot();
		ListnerImplementationClass.test.log(Status.INFO, "LOGIN PAGE STARTS HERE");
		co.getClickOnAdvanced().click();
		co.getClickOnUnsafeLink().click();
		co.getUserNameTextField().sendKeys(USERNAME);
		co.getLohinbtn().click();
		Thread.sleep(1000);		
		co.getPasswordtextfield().sendKeys(PASSWORD);
		co.getLohinbtn().click();
		co.getDropdownElement().click();
		co.getChooseClient().click();
		co.getLohinbtn().click();
		ListnerImplementationClass.test.log(Status.INFO, "LOGIN PAGE ENS HERE");
		ListnerImplementationClass.test.log(Status.INFO, "CONGIGURATION PAGE STARTS HERE");
		co.getClickOnHamBurger().click();
		co.getSetUpAdmin().click();
		Thread.sleep(3000);
		co.scrollInsideWebElement(driver);
		co.getClickOnHamBurger().click();
		ListnerImplementationClass.test.log(Status.INFO, "DATA SOURCE DETAILS STARTS HERE");
		Thread.sleep(2000);
		co.getDataSourceDetails().click();
		co.getDataSourceDetailsClick().click();
		Thread.sleep(2000);
		co.getErpUserName().clear();
		co.getErpUserName().sendKeys("dpolley@adq.ae");
		Thread.sleep(2000);
		co.geterpURL().clear();
		co.geterpURL().sendKeys("https://enae-dev1.fa.em8.oraclecloud.com/");
		Thread.sleep(2000);
		co.getErpPassword().clear();
		co.getErpPassword().sendKeys("Welcome@098");
		Thread.sleep(2000);
		co.getBIPReportPath().clear();
		co.getBIPReportPath().sendKeys("/Custom/CCM Project/Reports");
		co.getSavedetails().click();
		co.handleDetailsSavedPopup(driver);
		ListnerImplementationClass.test.log(Status.INFO, "DATA SOURCE DETAILS ENDS HERE");
		ListnerImplementationClass.test.log(Status.INFO, "DATA SYNCHRONIZATION FOR USER(S) AND ROLE(S) EXCLUSION STARTS HERE");
		Thread.sleep(5000);
		co.getDataSynchronization().click();
		co.getDataSynchronization1().click();
		co.getErpUsername1().clear();
		co.getErpUsername1().sendKeys("dpolley@adq.ae");
		Thread.sleep(1000);
		co.getSourceUrl().clear();
		co.getSourceUrl().sendKeys("https://enae-dev1.fa.em8.oraclecloud.com/");
		Thread.sleep(1000);
		co.getSourcePassword().clear();
		co.getSourcePassword().sendKeys("Welcome@098");
		Thread.sleep(1000);
		co.getReportPath().clear();
		co.getReportPath().sendKeys("/Custom/CCM Project/Reports");
		co.getGetDataExclusion().click();
		co.handleDetailsSavedPopup1(driver);
		ListnerImplementationClass.test.log(Status.INFO, "DATA SYNCHRONIZATION FOR USER(S) AND ROLE(S) EXCLUSION STARTS HERE");
		ListnerImplementationClass.test.log(Status.INFO, "USER(S) EXCLUSION STARTS HERE");
		/*Thread.sleep(2000);
		co.getUserExclusion().click();
		Thread.sleep(2000);
		co.getUserExclusionDropDown().click();
		Thread.sleep(2000);
		co.getAddUserExclution().click();
		Thread.sleep(1000);
		co.getFirstCheckBox().click();
		Thread.sleep(1000);
		co.getChooseExclutionDropDown().click();
		Thread.sleep(1000);
		co.getGlobalLevelExclusion().click();
		Thread.sleep(1000);
		co.getSecoendCheckBox().click();
		//co.getGlobalLevelExclusion2().click();
		co.getChooseExclutionDropDown2().click();
		Thread.sleep(1000);
		co.getBussinessLevelExclusion().click();
		Thread.sleep(1000);
		co.getSelectBussinessProcess().click();
		co.getSelectAsProcureToPay().click();	
		co.getSelectAsRecordToReport().click();
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		co.getThirdCheckBox().click();
		co.getChooseExclutionDropDown3().click();
		co.getRuleLevelExclusion().click();
		co.getSelectBussinessProcess1().click();
		co.getAdjustProjectCostsAndPerformProjectCapitaliz().click();
		co.getApprovePayablesInvoicesAndCreatePayments().click();
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		co.getSaveUserExclusionButton().click();
		ListnerImplementationClass.test.log(Status.INFO, "USER(S) EXCLUSION ENDS HERE");
		ListnerImplementationClass.test.log(Status.INFO, "ROLE(S) EXCLUSION STARTS HERE");
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		Thread.sleep(1000);
		rt.keyPress(KeyEvent.VK_END);
		rt.keyRelease(KeyEvent.VK_END);
		co.getRolesExclution().click();
		Thread.sleep(1000);
		co.getUserUolesExclution().click();
		co.getAddRoleExclusion().click();
		Thread.sleep(1000);
		co.getFirstCheckBox1().click();
		Thread.sleep(1000);
		co.getChooseExclusion().click();
		Thread.sleep(1000);
		co.getChooseGlobalLevel().click();
		Thread.sleep(1000);
		co.getSecoendCheckBox1().click();
		Thread.sleep(1000);
		co.getChooseExclusion2().click();
		Thread.sleep(1000);
		co.getChooseBussinessProcessLevel().click();
		Thread.sleep(1000);
		co.getChooseBussinessExclusion().click();
		co.getChooseprocureToPay().click();
		co.getChooseRecordToReport().click();
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		co.getSecoendCheckBox3().click();
		co.getChooseRoleExclusion().click();
		co.getChooseRoleLevel().click();
		co.getChooseRoleExclusionDropdown().click();
		co.getAdjustProjectCostsAndPerformProjectCapitaliz1().click();
		co.getApprovePayablesInvoicesAndCreatePayments1().click();
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		co.getSaveRoleExclusion().click();
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		rt.keyPress(KeyEvent.VK_END);
		rt.keyRelease(KeyEvent.VK_END);
		co.getSoDReportsOutputFormat().click();
		Thread.sleep(1000);
		co.getSoDReportsOutputFormatDropDown().click();
		co.getOmrcFormant().click();
		co.getBussinessProcessWiseReports().click();
		//co.getApplyLimitOnInstaceForRules().click();
		//co.getApplyLimitOnInstaceForRulesDropDwon().click();
		Thread.sleep(1000);
		//co.getMaxSODExceprionPerControl().click();*/
		ListnerImplementationClass.test.log(Status.INFO, "ROLE(S) EXCLUSION ENDS HERE");
		ListnerImplementationClass.test.log(Status.INFO, "FALSE POSITIVE STARTS HERE");
		Thread.sleep(1000);
		co.getFalsePositive().click();
		Thread.sleep(3000);
		
		//co.getApplyGlobalAccessCondition().click();
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		rt.keyPress(KeyEvent.VK_ENTER);
		rt.keyRelease(KeyEvent.VK_ENTER);
		Thread.sleep(1000);
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		rt.keyPress(KeyEvent.VK_SPACE);
		rt.keyRelease(KeyEvent.VK_SPACE);
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		rt.keyPress(KeyEvent.VK_ENTER);
		rt.keyRelease(KeyEvent.VK_ENTER);
		co.getWithInSameBussinessUint().click();
		rt.keyPress(KeyEvent.VK_END);
		rt.keyRelease(KeyEvent.VK_END);
		co.getApprovalWorkflow().click();
		co.getApprovalWorkflowDropDown().click();
		co.getApprovalWorkFlowDropDownToggle().click();
		Thread.sleep(2000);
		//co.getUploadApprovalWorkFlow().click();
		rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		rt.keyPress(KeyEvent.VK_ENTER);
		rt.keyRelease(KeyEvent.VK_ENTER);
//=======================section for Download button==============================

//=======================section for Download button==============================

		co.getChooseFile().click();
		wLib.uploadFileWithRobot(System. getProperty("user.dir")+"\\Data\\ApprovalWorkflowTemplate.xlsx");
		rt.keyPress(KeyEvent.VK_END);
		rt.keyRelease(KeyEvent.VK_END);
		Thread.sleep(3000);
		co.getOlap().click();
		Thread.sleep(3000);
		/*rt.keyPress(KeyEvent.VK_TAB);
		rt.keyRelease(KeyEvent.VK_TAB);
		rt.keyPress(KeyEvent.VK_ENTER);
		rt.keyRelease(KeyEvent.VK_ENTER);*/
		co.getOlapConfigaratuion().click();
		co.getOlapConfigaratuionToggle().click();
		ListnerImplementationClass.test.log(Status.INFO, "FALSE POSITIVE ENDS HERE");
		ListnerImplementationClass.test.log(Status.INFO, "CONFIGURATION PAGE ENDS HERE");
	}
}